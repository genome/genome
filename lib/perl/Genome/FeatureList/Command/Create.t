#!/usr/bin/env genome-perl

use strict;
use warnings;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1; #FeatureLists generate their own IDs, but this is still a good idea
};

use Test::More tests => 7;

use above 'Genome';

my $cmd_class = 'Genome::FeatureList::Command::Create';
use_ok($cmd_class);

my $test_bed_file = __FILE__ . '.bed';
ok(-e $test_bed_file, 'test file ' . $test_bed_file . ' exists');

my %params = (
    name                => 'GFL test feature-list',
    format              => 'true-BED',
    content_type        => 'targeted',
    description         => 'A dummy feature-list for testing the create command',
    file_path           => $test_bed_file,
);

my $create_command = $cmd_class->create(%params);
ok($create_command, 'constructed create command');
isa_ok($create_command, $cmd_class);
my $feature_list;
{
    local $ENV{UR_COMMAND_DUMP_STATUS_MESSAGES} = 0;
    $feature_list = $create_command->execute;
}
ok($feature_list, 'command executed successfully');
isa_ok($feature_list, 'Genome::FeatureList', 'command returned a Genome::FeatureList');

delete $params{content_type};
$create_command = $cmd_class->create(%params);
ok(!$create_command->execute(), 'must have content_type.');
