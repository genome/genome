{
   "links" : [
      {
         "destination" : "set status Running",
         "source" : "input connector"
      },
      {
         "destination" : "Parallel Model Test",
         "source" : "set status Running"
      },
      {
         "dataFlow" : {
            "prefixes" : "prefixes",
            "suffix" : "suffix"
         },
         "destination" : "Parallel Model Test",
         "source" : "input connector"
      },
      {
         "dataFlow" : {
            "outputs" : "outputs"
         },
         "destination" : "output connector",
         "source" : "Parallel Model Test"
      },
      {
         "destination" : "set status Succeeded",
         "source" : "Parallel Model Test"
      },
      {
         "destination" : "output connector",
         "source" : "set status Succeeded"
      }
   ],
   "tasks" : {
      "Parallel Model Test" : {
         "methods" : [
            {
               "name" : "Parallel Model Test",
               "parameters" : {
                  "links" : [
                     {
                        "dataFlow" : {
                           "prefixes" : "prefix",
                           "suffix" : "suffix"
                        },
                        "destination" : "Appender",
                        "source" : "input connector"
                     },
                     {
                        "dataFlow" : {
                           "output" : "outputs"
                        },
                        "destination" : "output connector",
                        "source" : "Appender"
                     }
                  ],
                  "tasks" : {
                     "Appender" : {
                        "methods" : [
                           {
                              "name" : "shortcut",
                              "parameters" : {
                                 "commandLine" : [
                                    "genome",
                                    "ptero",
                                    "wrapper",
                                    "--command-class",
                                    "Genome::Ptero::TestCommand::ParamAppender",
                                    "--method",
                                    "shortcut",
                                    "--log-directory",
                                    "test_logs/parallel-cmd"
                                 ],
                                 "environment" : {
                                    "FOO" : "bar",
                                    "XGENOME_LSB_SUB_ADDITIONAL" : "docker(hello-world)",
                                    "XGENOME_PTERO_LSF_SERVICE_URL" : "http://lsf.example.com/v1",
                                    "XGENOME_PTERO_SHELL_COMMAND_SERVICE_URL" : "http://example.com/v1",
                                    "XGENOME_SOFTWARE_RESULT_ASYNC_LOCKING" : "1"
                                 },
                                 "retrySettings" : {
                                    "attempts" : 750,
                                    "exitCode" : 75,
                                    "initialInterval" : 60,
                                    "maxInterval" : 3600
                                 },
                                 "user" : "dmorton",
                                 "workingDirectory" : "/home/archive/dmorton/genome/lib/perl/Genome"
                              },
                              "service" : "job",
                              "serviceDataToSave" : [
                                 "error_message",
                                 "error"
                              ],
                              "serviceUrl" : "http://example.com/v1"
                           },
                           {
                              "name" : "execute",
                              "parameters" : {
                                 "command" : "genome ptero wrapper --command-class Genome::Ptero::TestCommand::ParamAppender --method execute --log-directory test_logs/parallel-cmd",
                                 "cwd" : "/home/archive/dmorton/genome/lib/perl/Genome",
                                 "environment" : {
                                    "FOO" : "bar",
                                    "LSB_SUB_ADDITIONAL" : "docker(hello-world)",
                                    "XGENOME_LSB_SUB_ADDITIONAL" : "docker(hello-world)",
                                    "XGENOME_PTERO_LSF_SERVICE_URL" : "http://lsf.example.com/v1",
                                    "XGENOME_PTERO_SHELL_COMMAND_SERVICE_URL" : "http://example.com/v1"
                                 },
                                 "options" : {
                                    "errFile" : "/tmp/ptero-lsf-logfile-aa257d34-2f57-45f5-900f-57bb3aa8e4b9.err",
                                    "jobGroup" : "/genome/dmorton",
                                    "numProcessors" : 1,
                                    "outFile" : "/tmp/ptero-lsf-logfile-aa257d34-2f57-45f5-900f-57bb3aa8e4b9.out",
                                    "postExecCmd" : "bash -c '/usr/bin/ptero-lsf-post-exec --stderr /tmp/ptero-lsf-logfile-11641b61-f207-4bd7-94d0-eeb05f2fb808.err --stdout /tmp/ptero-lsf-logfile-11641b61-f207-4bd7-94d0-eeb05f2fb808.out' > /tmp/ptero-lsf-logfile-11641b61-f207-4bd7-94d0-eeb05f2fb808-postexec.log 2>&1 && rm -f /tmp/ptero-lsf-logfile-11641b61-f207-4bd7-94d0-eeb05f2fb808-postexec.log",
                                    "preExecCmd" : "/docker_run.py /usr/bin/ptero-lsf-pre-exec; exit 0;",
                                    "queue" : "long",
                                    "resReq" : "select[gtmp>1 && mem>3000] span[hosts=1] rusage[gtmp=1 && mem=3000]"
                                 },
                                 "pollingInterval" : 300,
                                 "rLimits" : {
                                    "RSS" : 3000000
                                 },
                                 "user" : "dmorton"
                              },
                              "service" : "job",
                              "serviceDataToSave" : [
                                 "error_message",
                                 "error",
                                 "lsfJobId"
                              ],
                              "serviceUrl" : "http://lsf.example.com/v1"
                           }
                        ],
                        "parallelBy" : "prefix"
                     }
                  }
               },
               "service" : "workflow"
            },
            {
               "name" : "set status Crashed",
               "parameters" : {
                  "commandLine" : [
                     "genome",
                     "process",
                     "set-status",
                     "123",
                     "Crashed",
                     "--exit-code",
                     1
                  ],
                  "environment" : {
                     "FOO" : "bar",
                     "XGENOME_LSB_SUB_ADDITIONAL" : "docker(hello-world)",
                     "XGENOME_PTERO_LSF_SERVICE_URL" : "http://lsf.example.com/v1",
                     "XGENOME_PTERO_SHELL_COMMAND_SERVICE_URL" : "http://example.com/v1"
                  },
                  "user" : "dmorton",
                  "workingDirectory" : "/home/archive/dmorton/genome/lib/perl/Genome"
               },
               "service" : "job",
               "serviceUrl" : "http://example.com/v1"
            }
         ]
      },
      "set status Running" : {
         "methods" : [
            {
               "name" : "set status Running",
               "parameters" : {
                  "commandLine" : [
                     "genome",
                     "process",
                     "set-status",
                     "123",
                     "Running",
                     "--exit-code",
                     0
                  ],
                  "environment" : {
                     "FOO" : "bar",
                     "XGENOME_LSB_SUB_ADDITIONAL" : "docker(hello-world)",
                     "XGENOME_PTERO_LSF_SERVICE_URL" : "http://lsf.example.com/v1",
                     "XGENOME_PTERO_SHELL_COMMAND_SERVICE_URL" : "http://example.com/v1"
                  },
                  "user" : "dmorton",
                  "workingDirectory" : "/home/archive/dmorton/genome/lib/perl/Genome"
               },
               "service" : "job",
               "serviceUrl" : "http://example.com/v1"
            }
         ]
      },
      "set status Succeeded" : {
         "methods" : [
            {
               "name" : "set status Succeeded",
               "parameters" : {
                  "commandLine" : [
                     "genome",
                     "process",
                     "set-status",
                     "123",
                     "Succeeded",
                     "--exit-code",
                     0
                  ],
                  "environment" : {
                     "FOO" : "bar",
                     "XGENOME_LSB_SUB_ADDITIONAL" : "docker(hello-world)",
                     "XGENOME_PTERO_LSF_SERVICE_URL" : "http://lsf.example.com/v1",
                     "XGENOME_PTERO_SHELL_COMMAND_SERVICE_URL" : "http://example.com/v1"
                  },
                  "user" : "dmorton",
                  "workingDirectory" : "/home/archive/dmorton/genome/lib/perl/Genome"
               },
               "service" : "job",
               "serviceUrl" : "http://example.com/v1"
            }
         ]
      }
   }
}
