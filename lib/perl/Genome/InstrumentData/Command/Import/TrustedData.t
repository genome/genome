#!/usr/bin/env genome-perl

BEGIN {
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_COMMAND_DUMP_STATUS_MESSAGES} = 1;
}

use strict;
use warnings;

use File::Spec;
use Sub::Install qw(reinstall_sub);
use Test::More tests => 11;

use above "Genome";
use Genome::Test::Factory::AnalysisProject;
use Genome::Test::Factory::Library;

my $rsync_version = `rsync --version`;
if ($rsync_version =~ m/protocol version 30$/sm) {
    Sub::Install::reinstall_sub({
        into => 'Genome::Sys',
        as => 'rsync_directory',
        code => sub {return 1},
    });
}


my $class = 'Genome::InstrumentData::Command::Import::TrustedData';
use_ok($class) or die 'cannot continue without import class';

my $test_dir = Genome::Sys->create_temp_directory;

for my $f (1..5) {
    my $path = File::Spec->join($test_dir, $f);
    Genome::Sys->write_file($path, "$f\n");
}

my $library = Genome::Test::Factory::Library->setup_object;
my $anp = Genome::Test::Factory::AnalysisProject->setup_object(name => 'test anp for trusted data importer');
my $anp_environment_path = Genome::Sys->create_temp_file_path();
Genome::Sys->write_file($anp_environment_path, <<CONFIG
nothing_useful: This test relies on the default disk group specified in the testing environment
CONFIG
);
Genome::Config::AnalysisProject::Command::AddEnvironmentFile->execute(analysis_project => $anp, environment_file => $anp_environment_path);

my %extra_properties = (
    run_name            => 'TESTXXXX12345-3-something',
    subset_name         => '3-something',
    sequencing_platform => 'nothing',
    read_length         => 1,
);

my $cmd = $class->create(
    analysis_project => $anp,
    import_source_name => 'TrustedData.t',
    library => $library,
    source_directory => $test_dir,
    import_format => 'numbers',
    description => 'junk data for testing the importer',
    read_count => 500,
    instrument_data_properties => [map { join('=', $_, $extra_properties{$_}) } sort keys %extra_properties],
);
isa_ok($cmd, $class, 'created command object');

ok($cmd->execute, 'executed command');
my $result = $cmd->_new_instrument_data;

isa_ok($result, 'Genome::InstrumentData', 'created a new instrument data');

my @anp_data = $anp->instrument_data;
is($result, $anp_data[0], 'added data to analysis project');

is($result->library, $library, 'assigned library');
for my $key (sort keys %extra_properties) {
    is ($result->$key, $extra_properties{$key}, "assigned $key");
}

my @glob = glob(File::Spec->join($test_dir, '*'));
is(scalar(@glob), 5, 'original source files were not deleted by default');
