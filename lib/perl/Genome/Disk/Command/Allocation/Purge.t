#!/usr/bin/env genome-perl

use strict;
use warnings;

BEGIN {
    $ENV{UR_DBI_NO_COMMIT} = 1;
    $ENV{UR_USE_DUMMY_AUTOGENERATED_IDS} = 1;
};

my $pkg = 'Genome::Disk::Command::Allocation::Purge';

use above 'Genome';
use Test::More tests => 6;

use_ok($pkg);

my $fake_allocation = Genome::Disk::Allocation->create(
    disk_group_name => Genome::Config::get('disk_group_alignments'),
    allocation_path => 'disk_command_allocation_purge/testing/' . time(),
    kilobytes_requested => 1,
    owner_class_name => 'Genome::Sys::User',
    owner_id => 'testuser',
);
isa_ok($fake_allocation, 'Genome::Disk::Allocation', 'created test allocation');

my $reason = 'testing if allocations can be purged';
my $cmd = $pkg->create(
    allocations => [$fake_allocation],
    reason => $reason,
);
isa_ok($cmd, $pkg, 'created command');
ok($cmd->execute, 'executed command');

my @events = $fake_allocation->timeline_events;

my ($purge) = grep { $_->name eq 'purged' } @events;
ok($purge, 'got purge event');

is($purge->reason, $reason, 'reason was set');
